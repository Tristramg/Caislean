- name: Install packages necessary for backup system
  apt: pkg={{item}} state=installed
  with_items:
    - gnupg
    - rdiff-backup
    - rsync
  tags:
    - base
    - backup

- name: Install backup software from backports
  apt: pkg={{item}} default_release=wheezy-backports state=installed
  with_items:
    - backupninja
    - duplicity
  tags:
    - base
    - backup

- name: Install backupninja.conf
  copy: src=etc/backupninja.conf dest=/etc/backupninja.conf group=root owner=root mode=0644
  tags:
    - base
    - backup

- name: Create /etc/backupninja
  file: state=directory name=/etc/backupninja group=root owner=root mode=0700
  tags:
    - base
    - backup

- name: Check that the backup PGP key is present
  command: gpg --list-keys {{ backup_pgp_key_id }}
  ignore_errors: true
  register: gpg_check_key_present
  tags:
    - base
    - backup

- name: Upload PGP key temporary file
  copy: content="{{ lookup('file', backup_security_directory + '/backup.key.pgp') }}" dest=/tmp/duplicity-key.pgp group=root owner=root mode=0600
  when: ( gpg_check_key_present|failed )
  tags:
    - base
    - backup

- name: Upload PGP passphrase to temporary file
  copy: content="{{ backup_pgp_passphrase }}" dest=/tmp/pgp-passphrase.tmp group=root owner=root mode=0600
  when: ( gpg_check_key_present|failed )
  tags:
    - base
    - backup

- name: Import PGP key on server
  command: gpg --batch --passphrase-file /tmp/pgp-passphrase.tmp --import /tmp/duplicity-key.pgp
  when: ( gpg_check_key_present|failed )
  tags:
    - base
    - backup

- name: Make sure PGP-related temporary files are absent
  file: name=/tmp/{{item}} state=absent
  with_items:
    - pgp-passphrase.tmp
    - duplicity-key.pgp
  tags:
    - base
    - backup

- name: Make sure PGP key for backups is trusted
  lineinfile: dest=/root/.gnupg/gpg.conf create=yes line="trusted-key {{ backup_pgp_key_id }}" owner=root group=root mode=0600
  tags:
    - base
    - backup

- name: Install backup SSH private key of backup remote account
  copy: content="{{ lookup('file', backup_security_directory + '/backup.key.ssh') }}" dest=/etc/backupninja/id_rsa.{{ backup_remote_ip }}.duplicity group=root owner=root mode=0600
  tags:
    - base
    - backup

- name: Make sure /root/.ssh exists
  file: name=/root/.ssh state=directory group=root owner=root mode=0700
  tags:
    - base
    - backup

- name: Make sure SSH backup private key is used when connecting remotely
  lineinfile: dest=/root/.ssh/config create=yes owner=root group=root mode=0600 line="IdentityFile /etc/backupninja/id_rsa.{{ backup_remote_ip }}.duplicity"
  tags:
    - base
    - backup

- name: Install backupninja configuration file for duplicity
  template: src=remotebackup.dup.j2 dest=/etc/backup.d/20-remotebackup.dup group=root owner=root mode=0600
  tags:
    - base
    - backup

- name: Open UFW outbound SSH connections to backup host
  ufw: rule=allow port=22 direction=out to_ip={{ backup_remote_ip }}
  tags:
    - base
    - backup
    - firewall


